var express = require('express')
var path = require('path')
var app=express()
var mongo = require('mongodb').MongoClient
var url = process.env.MONGOLAB_URI
var port = process.env.PORT || 5000

var urlkey=0
var newUrl

//console.log("url = "+url)


mongo.connect(url, function (err, db) {
  if (err) {
    console.log('Unable to connect to the mongoDB server. Error:', err)
  } else {
    console.log('Connection established to', url)

    // do some work here with the database.

    app.get('/',function(req,res){
       res.sendFile(path.join(__dirname + '/index.html'))
    })

    app.listen(process.env.PORT || port, function(err) {

     if (err) {return console.log('something bad happened', err)}
      console.log('server is listening on '+port)
     })

     /*
         app.get('/:Url',function(req,res){
            var r=req.params.Url 
 
           console.log("the found url for " + r + " is : ")
            res.end("the found url for " + r + " is : ")
          })
     */

    app.route(/\/new\/.+/)
      .get(function(req, res) {
        if (validUrl(req)) 
        {

        var zf=Math.random()*1234567890123456
        var dbUrl=db.collection('nurl')
        var hostname = "https://2bReplaced.herokuapp.com/"

        zf=Math.floor(zf)
        console.log("current req "+req.path)
        console.log("newUrl = "+newUrl)
        //res.end('urlkey for '+newUrl+' = '+zf)

        dbUrl.insert({"originalUrl": newUrl, "code": zf},
           function(err, data) {
             if (err) { throw err }
             res.json({"originalUrl": newUrl, "shortUrl": hostname + zf})
          })
        
       } 
      else 
       { res.json({"error": "URL Invalid"}) }
    })


    function validUrl(req) {
     var pattern = /https?:\/\/www\..+\.*/
     newUrl = req.path.replace('/new/', '')
  
      return newUrl.match(pattern)
      
     }
    
    //Close connection
    db.close()
  }
})


